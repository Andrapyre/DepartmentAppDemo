import React, { useState } from "react"
import Form from "react-bootstrap/Form"
import Button from "react-bootstrap/Button"
import Row from "react-bootstrap/Row"
import Col from "react-bootstrap/Col"
import Field from "./Field"

const departmentFormName = "Department Info"
const contactFormName = "Contact Info"

const generateLabels = (isCreate: boolean) => {
  const buttonAction = isCreate ? "Create" : "Update"
  const formAction = isCreate ? "Create" : "Edit"
  return {
    departmentName: "Department Name",
    apiKey: "API Key",
    contactEmail: "Email",
    contactName: "Contact Name",
    contactPhone: "Phone",
    buttonAction,
    formAction,
  }
}

interface Props {
  isCreate: boolean
  department?: Department
}

interface Department {
  departmentName: string
  apiKey: string
  contactName: string
  contactEmail: string
  contactPhone: string
}

const defaultDepartmentState: Department = {
  departmentName: "",
  apiKey: "Autogenerated on creation",
  contactName: "",
  contactEmail: "",
  contactPhone: "",
}

export default function DepartmentForm({ isCreate, department }: Props) {
  const labels = generateLabels(isCreate)
  const initialDepartmentState =
    department !== undefined ? department : defaultDepartmentState
  const [departmentState, setDepartmentState] = useState<Department>(
    initialDepartmentState
  )
  const handleChange = (name: string, value: string) => {
    const newState: any = { ...departmentState }
    newState[name] = value
    setDepartmentState(newState)
  }
  return (
    <div>
      <h5>
        Departments {">"} {labels.formAction}
      </h5>
      <Form>
        <Form.Group>
          <fieldset className="border p-2">
            <Form.Label as="legend" className="w-auto">
              {departmentFormName}
            </Form.Label>
            <Field
              name="departmentName"
              changeHandler={handleChange}
              label={labels.departmentName}
              value={departmentState.departmentName}
            ></Field>
            <Field
              readOnly
              name="apiKey"
              changeHandler={handleChange}
              label={labels.apiKey}
              value={departmentState.apiKey}
            ></Field>
          </fieldset>
        </Form.Group>
        <Form.Group>
          <fieldset className="border p-2">
            <Form.Label as="legend" className="w-auto">
              {contactFormName}
            </Form.Label>
            <Field
              name="contactName"
              changeHandler={handleChange}
              label={labels.contactName}
              value={departmentState.contactName}
            ></Field>
            <Field
              name="email"
              changeHandler={handleChange}
              label={labels.contactEmail}
              value={departmentState.contactEmail}
            ></Field>
            <Field
              name="phone"
              changeHandler={handleChange}
              label={labels.contactPhone}
              value={departmentState.contactPhone}
            ></Field>
          </fieldset>
        </Form.Group>
        <Row>
          <Col sm>
            <Button href="/" variant="secondary" className="mr2" block>
              Cancel
            </Button>
          </Col>
          <Col sm>
            <Button variant="success" className="mb2" block>
              {labels.buttonAction}
            </Button>
          </Col>
        </Row>
      </Form>
    </div>
  )
}
